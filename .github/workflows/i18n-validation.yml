name: Internationalization Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Ritualist/Resources/Localizable.xcstrings'
      - 'Ritualist/**/*.swift'
  pull_request:
    branches: [ main ]
    paths:
      - 'Ritualist/Resources/Localizable.xcstrings'
      - 'Ritualist/**/*.swift'

jobs:
  string-validation:
    name: Validate Localized Strings
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Validate String Lengths
      run: swift Scripts/validate_strings.swift
      
    - name: Upload String Validation Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: string-validation-report
        path: string_validation_report.txt
        retention-days: 30

  unit-tests:
    name: Localization Unit Tests
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Run Localization Tests
      run: |
        xcodebuild test \
          -project Ritualist.xcodeproj \
          -scheme Ritualist \
          -destination 'platform=iOS Simulator,name=iPhone 15' \
          -testClass LocalizationLayoutTests
          
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: localization-test-results
        path: |
          build/reports/
          *.xcresult/
        retention-days: 30

  visual-regression:
    name: Visual Regression Tests
    runs-on: macos-latest
    if: github.event_name == 'pull_request'
    
    strategy:
      matrix:
        locale: [en, de, fr, es]
        device: ['iPhone 15', 'iPad Air (5th generation)']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install xcparse
      run: brew install chargepoint/xcparse/xcparse
    
    - name: Run Visual Tests - ${{ matrix.locale }} on ${{ matrix.device }}
      run: |
        xcodebuild test \
          -project Ritualist.xcodeproj \
          -scheme Ritualist \
          -destination 'platform=iOS Simulator,name=${{ matrix.device }}' \
          -testClass LocaleScreenshotTests/testScreenshotConsistencyAcrossLocales \
          -resultBundlePath "test-results-${{ matrix.locale }}-${{ matrix.device }}.xcresult" \
          OTHER_SWIFT_FLAGS="-D TESTING_LOCALE_${{ matrix.locale }}"
      continue-on-error: true
    
    - name: Extract Screenshots
      run: |
        mkdir -p screenshots/${{ matrix.locale }}-${{ matrix.device }}
        if [ -d "test-results-${{ matrix.locale }}-${{ matrix.device }}.xcresult" ]; then
          xcparse screenshots "test-results-${{ matrix.locale }}-${{ matrix.device }}.xcresult" "screenshots/${{ matrix.locale }}-${{ matrix.device }}/"
        fi
    
    - name: Upload Screenshots
      uses: actions/upload-artifact@v4
      with:
        name: screenshots-${{ matrix.locale }}-${{ matrix.device }}
        path: screenshots/
        retention-days: 14

  accessibility-audit:
    name: Accessibility Audit
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Run Accessibility Tests
      run: |
        xcodebuild test \
          -project Ritualist.xcodeproj \
          -scheme Ritualist \
          -destination 'platform=iOS Simulator,name=iPhone 15' \
          -only-testing:RitualistUITests/testAccessibilityLabels
    
  rtl-validation:
    name: RTL Layout Validation
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Test RTL Layout
      run: |
        xcodebuild test \
          -project Ritualist.xcodeproj \
          -scheme Ritualist \
          -destination 'platform=iOS Simulator,name=iPhone 15' \
          -testClass LocaleScreenshotTests/testRTLLocaleScreenshots \
          -testClass LocaleScreenshotTests/testUIElementPositionsInRTL

  generate-report:
    name: Generate I18n Report
    runs-on: macos-latest
    needs: [string-validation, unit-tests, visual-regression, accessibility-audit, rtl-validation]
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
    
    - name: Generate Comprehensive Report
      run: |
        cat > i18n-report.md << 'EOF'
        # 🌍 Internationalization Validation Report
        
        ## Summary
        This report shows the results of comprehensive internationalization testing for the Ritualist app.
        
        ## Test Results
        - **String Validation**: ${{ needs.string-validation.result }}
        - **Unit Tests**: ${{ needs.unit-tests.result }}
        - **Visual Regression**: ${{ needs.visual-regression.result }}
        - **Accessibility Audit**: ${{ needs.accessibility-audit.result }}
        - **RTL Validation**: ${{ needs.rtl-validation.result }}
        
        ## Artifacts
        Check the "Artifacts" section below for detailed reports and screenshots.
        
        ## Next Steps
        - Review any failed tests in the artifacts
        - Update string translations if validation failed
        - Fix layout issues identified in visual regression tests
        - Ensure accessibility labels are properly localized
        
        Generated on: $(date)
        EOF
    
    - name: Upload Comprehensive Report
      uses: actions/upload-artifact@v4
      with:
        name: i18n-comprehensive-report
        path: |
          i18n-report.md
          artifacts/
        retention-days: 30
    
    - name: Comment PR (if applicable)
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('i18n-report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });

# Security: Limit permissions
permissions:
  contents: read
  issues: read
  pull-requests: write