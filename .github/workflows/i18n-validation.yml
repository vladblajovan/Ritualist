name: Build and Test

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Ritualist/**/*.swift'
      - 'Ritualist/Resources/**'
      - 'Ritualist.xcodeproj/**'
      - 'TestPlan.xctestplan'
  pull_request:
    branches: [ main ]
    paths:
      - 'Ritualist/**/*.swift'
      - 'Ritualist/Resources/**'
      - 'Ritualist.xcodeproj/**'
      - 'TestPlan.xctestplan'

jobs:
  string-validation:
    name: Validate Localized Strings
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Validate String Lengths
      run: swift Scripts/validate_strings.swift
      
    - name: Upload String Validation Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: string-validation-report
        path: string_validation_report.txt
        retention-days: 30

  build-test:
    name: Build and Test
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Build Project
      run: |
        xcodebuild build \
          -project Ritualist.xcodeproj \
          -scheme Ritualist-AllFeatures \
          -destination 'platform=iOS Simulator,name=iPhone 16' \
          -configuration Debug
    
    - name: Run Tests (including Swift Testing)
      run: |
        xcodebuild test \
          -project Ritualist.xcodeproj \
          -scheme Ritualist-AllFeatures \
          -destination 'platform=iOS Simulator,name=iPhone 16' \
          -only-testing:RitualistTests \
          -resultBundlePath TestResults.xcresult
      continue-on-error: true
          
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          TestResults.xcresult/
        retention-days: 30

  swiftlint:
    name: SwiftLint
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install SwiftLint
      run: brew install swiftlint
    
    - name: Run SwiftLint
      run: |
        cd Ritualist
        swiftlint --reporter github-actions-logging

  generate-report:
    name: Generate Build Report
    runs-on: macos-latest
    needs: [string-validation, build-test, swiftlint]
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
    
    - name: Generate Build Report
      run: |
        cat > build-report.md << 'EOF'
        # ğŸ”¨ Ritualist Build Report
        
        ## Summary
        This report shows the results of the build and test pipeline for the Ritualist app.
        
        ## Test Results
        - **String Validation**: ${{ needs.string-validation.result }}
        - **Build & Test**: ${{ needs.build-test.result }}
        - **SwiftLint**: ${{ needs.swiftlint.result }}
        
        ## Artifacts
        Check the "Artifacts" section below for detailed reports.
        
        ## Next Steps
        - Review any failed builds or tests
        - Fix SwiftLint violations if any
        - Update string translations if validation failed
        
        Generated on: $(date)
        EOF
    
    - name: Upload Build Report
      uses: actions/upload-artifact@v4
      with:
        name: build-report
        path: |
          build-report.md
          artifacts/
        retention-days: 30
    
    - name: Comment PR (if applicable)
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('build-report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });

# Security: Limit permissions
permissions:
  contents: read
  issues: read
  pull-requests: write